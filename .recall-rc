RECALL_LOCATION=~/.recall

recall() {
	if [[ $1 == "save" ]]
        then _recall_save
    elif [[ $1 == "help" ]]
        then _recall_help
    elif [[ $1 == "list" ]]
        then _recall_list
    elif [[ $1 == "remove" ]]
    	then _recall_remove $2
    elif [[ $1 == "" ]]
        then _recall_help
	else
		_recall_enter $1
    fi
}

_recall_save() {
	_recall_verify_file

	local lastCommand="$(fc -ln -1)"
	echo $lastCommand >> $RECALL_LOCATION
    echo Saved $lastCommand
}

_recall_list() {
	_recall_verify_file

    (( count = 0 ))
    while read line; do    
        echo $count. $line
        (( count = count + 1 ))   
    done < $RECALL_LOCATION
}

_recall_help() {
    echo '
	This `recall` script stores previously saved commands. 

	The following commands are given:

    	`save` - Save the previously entered command. i.e. `recall save`
    	`list` - Show all saved entries. i.e. `recall list`
    	`remove` INDEX - Remove an entry by index. i.e. `recall remove 63`
    	`INDEX `- reuse the entry at the given index. i.e. `recall 79`
    	'
}

_recall_remove() {
	if [[ $1 == "" ]]
		then echo "remove command needs entry index"
	else
		(( fileLine = $1 + 1 ))
		sed -i '' -e "$fileLine d" $RECALL_LOCATION
		echo "Entry $1 deleted"
	fi
}

_recall_enter() {
    (( count = 0 ))
    while read line; do    
        if [[ $count == $1 ]]
        	then echo Entering $line;
        	eval $line
        fi
        (( count = count + 1 ))   
    done < $RECALL_LOCATION
}

_recall_verify_file() {
    if [[ ! -a $RECALL_LOCATION ]];
        then touch $RECALL_LOCATION
    fi
}
